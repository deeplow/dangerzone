#!/usr/bin/env python

import asyncio
import glob
import io
import os
import sys
import tempfile
import zipfile


def say(msg):
    print(msg, file=sys.stderr, flush=True)


def main():
    say("Debugging mode enabled")

    # Get the size of the zipfile
    size = int.from_bytes(sys.stdin.buffer.read(2))
    say(f"Reading {size} bytes of Python zipfile")

    # Read the zipfile from stdin
    zf = sys.stdin.buffer.read(size)
    if len(zf) < size:
        say(f"Client closed the connection early")
        return 1

    with tempfile.NamedTemporaryFile(suffix=".zip") as t:
        say(f"Storing the Python zipfile to {t.name}")
        t.write(zf)
        t.flush()

        say(f"Importing the conversion module")
        sys.path.insert(0, t.name)

        import doc_to_pixels_qubes_wrapper
        return asyncio.run(doc_to_pixels_qubes_wrapper.main())


if __name__ == "__main__":
    sys.exit(main())
